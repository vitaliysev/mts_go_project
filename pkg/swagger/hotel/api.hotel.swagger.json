{
    "swagger": "2.0",
    "info": {
        "description": "This API provides hotel-related operations such as creating a booking, listing clients, etc.",
        "title": "Hotel API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:50052",
    "basePath": "/",
    "paths": {
        "/getHotel": {
            "post": {
                "description": "Получение одного отеля используя HTTP API.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hotel"
                ],
                "summary": "Получение одного отеля",
                "parameters": [
                    {
                        "description": "Hotel Data",
                        "name": "hotelBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_hotel_api_hotel.GetHotelRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Hotel got successfully",
                        "schema": {
                            "$ref": "#/definitions/internal_hotel_api_hotel.GetHotelResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/internal_hotel_api_hotel.ErrorResponse"
                        }
                    },
                    "405": {
                        "description": "Method not allowed",
                        "schema": {
                            "$ref": "#/definitions/internal_hotel_api_hotel.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internal_hotel_api_hotel.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/getHotels": {
            "post": {
                "description": "Получение всех отелей используя HTTP API.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hotel"
                ],
                "summary": "Получение всех отелей отеля",
                "parameters": [
                    {
                        "description": "Hotel Data",
                        "name": "hotelBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_hotel_api_hotel.GetHotelsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Hotels got successfully",
                        "schema": {
                            "$ref": "#/definitions/internal_hotel_api_hotel.GetHotelsResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/internal_hotel_api_hotel.ErrorResponse"
                        }
                    },
                    "405": {
                        "description": "Method not allowed",
                        "schema": {
                            "$ref": "#/definitions/internal_hotel_api_hotel.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internal_hotel_api_hotel.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/saveHotel": {
            "post": {
                "description": "Создание нового отеля используя HTTP API.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hotel"
                ],
                "summary": "Создание нового отеля",
                "parameters": [
                    {
                        "description": "Hotel Data",
                        "name": "hotelBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_hotel_api_hotel.SaveHotelRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Hotel saved successfully",
                        "schema": {
                            "$ref": "#/definitions/internal_hotel_api_hotel.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/internal_hotel_api_hotel.ErrorResponse"
                        }
                    },
                    "405": {
                        "description": "Method not allowed",
                        "schema": {
                            "$ref": "#/definitions/internal_hotel_api_hotel.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internal_hotel_api_hotel.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/updateHotel": {
            "put": {
                "description": "Обновление отеля используя HTTP API.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hotel"
                ],
                "summary": "Обновление отеля",
                "parameters": [
                    {
                        "description": "Hotel Data",
                        "name": "hotelBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_hotel_api_hotel.UpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Hotel updated successfully",
                        "schema": {
                            "$ref": "#/definitions/internal_hotel_api_hotel.updateResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/internal_hotel_api_hotel.ErrorResponse"
                        }
                    },
                    "405": {
                        "description": "Method not allowed",
                        "schema": {
                            "$ref": "#/definitions/internal_hotel_api_hotel.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internal_hotel_api_hotel.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "app.CreateBookingRequest": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "info": {
                    "$ref": "#/definitions/model.BookInfo"
                }
            }
        },
        "app.CreateBookingResponse": {
            "type": "object",
            "properties": {
                "cost": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "location": {
                    "type": "string"
                },
                "period": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "app.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "message": {
                    "type": "string",
                    "example": "Invalid request"
                }
            }
        },
        "app.GetBookingRequest": {
            "description": "GetBookingRequest contains a info for get",
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "app.GetBookingResponse": {
            "description": "GetBookingResponse contains a list of booking information.",
            "type": "object",
            "properties": {
                "info": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Book"
                    }
                }
            }
        },
        "app.GetRefreshTokenRequest": {
            "type": "object",
            "properties": {
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "app.GetRefreshTokenResponse": {
            "type": "object",
            "properties": {
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "app.LoginClientRequest": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "app.LoginClientResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                }
            }
        },
        "app.SigninClientRequest": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "app.SigninClientResponse": {
            "type": "object",
            "properties": {
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "github_com_vitaliysev_mts_go_project_internal_hotel_api_hotel_model.Hotel": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "info": {
                    "$ref": "#/definitions/github_com_vitaliysev_mts_go_project_internal_hotel_api_hotel_model.HotelInfo"
                }
            }
        },
        "github_com_vitaliysev_mts_go_project_internal_hotel_api_hotel_model.HotelInfo": {
            "type": "object",
            "required": [
                "location",
                "name",
                "price"
            ],
            "properties": {
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                }
            }
        },
        "internal_hotel_api_hotel.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "message": {
                    "type": "string",
                    "example": "Invalid request"
                }
            }
        },
        "internal_hotel_api_hotel.GetHotelRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "internal_hotel_api_hotel.GetHotelResponse": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "error": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "info": {
                    "$ref": "#/definitions/github_com_vitaliysev_mts_go_project_internal_hotel_api_hotel_model.HotelInfo"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "internal_hotel_api_hotel.GetHotelsRequest": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                }
            }
        },
        "internal_hotel_api_hotel.GetHotelsResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "hotels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_vitaliysev_mts_go_project_internal_hotel_api_hotel_model.Hotel"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "internal_hotel_api_hotel.Response": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "internal_hotel_api_hotel.SaveHotelRequest": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "info": {
                    "$ref": "#/definitions/github_com_vitaliysev_mts_go_project_internal_hotel_api_hotel_model.HotelInfo"
                }
            }
        },
        "internal_hotel_api_hotel.UpdateRequest": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "info": {
                    "$ref": "#/definitions/github_com_vitaliysev_mts_go_project_internal_hotel_api_hotel_model.Hotel"
                }
            }
        },
        "internal_hotel_api_hotel.updateResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "model.Book": {
            "description": "Book represents a book in the booking system",
            "type": "object",
            "properties": {
                "create_time": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "info": {
                    "$ref": "#/definitions/model.BookInfo"
                },
                "update_time": {
                    "$ref": "#/definitions/sql.NullTime"
                }
            }
        },
        "model.BookInfo": {
            "type": "object",
            "properties": {
                "hotel_id": {
                    "type": "integer"
                },
                "period_use": {
                    "type": "string"
                }
            }
        },
        "sql.NullTime": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        }
    }
}